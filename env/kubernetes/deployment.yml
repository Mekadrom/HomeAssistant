apiVersion: v1
data:
  POSTGRES_DB: hams_data
  POSTGRES_PASSWORD: hams_data
  POSTGRES_USER: hams_data
kind: ConfigMap
metadata:
  labels:
    app: postgres
  name: postgres-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: app-server
  name: app-server
spec:
  ports:
  - name: app-server-port
    port: 8080
    protocol: TCP
  selector:
    app: app-server
    id: o
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: frontend
  name: frontend
spec:
  ports:
  - name: frontend-port
    port: 4200
    protocol: TCP
  selector:
    app: frontend
    id: o
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: kafdrop-ui
  name: kafdrop-ui
spec:
  ports:
  - name: kafdrop-ui-port
    port: 9000
    protocol: TCP
  selector:
    app: kafdrop-ui
    id: o
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: kafka-broker
  name: kafka-broker
spec:
  ports:
  - name: kafka-broker-port
    port: 9092
    protocol: TCP
  selector:
    app: kafka-broker
    id: o
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgresdb
spec:
  ports:
  - name: postgresdb-port
    port: 5432
    protocol: TCP
  selector:
    app: postgresdb
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper-server
  name: zookeeper-server
spec:
  ports:
  - name: client
    port: 2181
    protocol: TCP
  - name: follower
    port: 2888
    protocol: TCP
  - name: leader
    port: 3888
    protocol: TCP
  selector:
    app: zookeeper-server
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: postgres
    type: local
  name: postgres-pv
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 32Gi
  hostPath:
    path: /var/lib/data
  storageClassName: manual
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgres
  name: postgres-pvc
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 32Gi
  storageClassName: manual
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-server0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app-server
      id: o
  template:
    metadata:
      labels:
        app: app-server
        id: o
    spec:
      containers:
      - args:
        - -Dspring.profiles.active=prod
        - -Dspring.datasource.url='jdbc:postgresql://postgresdb:5432/hams_data?currentSchema=hams_data'
        - -Dsecurity.auth.jwt.signing-key='bruh-momento'
        - -Dkafka.bootstrap-address='kafka-broker:9092'
        env:
        - name: SERVER_INTERNAL_IP
          value: app-server:8080
        image: us-east1-docker.pkg.dev/root-furnace-306909/hadocker-images/ha-server:1.0.0-main
        name: app-server
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
      id: o
  template:
    metadata:
      labels:
        app: frontend
        id: o
    spec:
      containers:
      - env:
        - name: FRONTEND_INTERNAL_IP
          value: frontend:9000
        - name: APP_SERVER_EXTERNAL_IP
          value: app-server:8080
        image: us-east1-docker.pkg.dev/root-furnace-306909/hadocker-images/ha-frontend:1.0.0-main
        name: frontend
        ports:
        - containerPort: 4200
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafdrop-ui0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafdrop-ui
  template:
    metadata:
      labels:
        app: kafdrop-ui
    spec:
      containers:
      - env:
        - name: KAFKA_BROKERCONNECT
          value: kafka-broker:29092
        - name: JVM_OPTS
          value: -Xms32M -Xmx64M
        - name: SERVER_SERVLET_CONTEXTPATH
          value: /
        image: obsidiandynamics/kafdrop:latest
        name: kafdrop-ui
        ports:
        - containerPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
      id: o
  template:
    metadata:
      labels:
        app: kafka-broker
        id: o
    spec:
      containers:
      - env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-server:2181
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        image: confluentinc/cp-kafka:latest
        name: kafka-broker
        ports:
        - containerPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresdb0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresdb
      id: o
  template:
    metadata:
      labels:
        app: postgresdb
        id: o
    spec:
      containers:
      - env:
        - name: DB_INTERNAL_IP
          value: postgres:5432
        envFrom:
        - configMapRef:
            name: postgres-config
        image: postgres:latest
        name: postgresdb
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresdbv
      imagePullSecrets:
      - name: gcr-json-key
      volumes:
      - name: postgresdbv
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-server0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper-server
  template:
    metadata:
      labels:
        app: zookeeper-server
    spec:
      containers:
      - env:
        - name: ZOOKEEPER_SERVER_ID
          value: "1"
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
        image: confluentinc/cp-zookeeper:latest
        name: zookeeper-server
        ports:
        - containerPort: 2181
